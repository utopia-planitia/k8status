{
    "$schema": "https://docs.renovatebot.com/renovate-schema.json",
    "extends": [
        "config:base"
    ],
    "pinDigests": true,
    "postUpdateOptions": [
        "gomodTidy",
        "gomodMassage",
        "gomodUpdateImportPaths"
    ],
    "prHourlyLimit": 0,
    "labels": [
        "renovate-bot"
    ],
    "automerge": true,
    "automergeType": "pr",
    "platformAutomerge": true,
    "postUpgradeTasks": {
        "commands": [],
        "fileFilters": [
            "**/**"
        ]
    },
    "separateMinorPatch": true,
    "dependencyDashboard": false,
    "regexManagers": [
        {
            "fileMatch": [
                "^.github/workflows/check.yml$"
            ],
            "matchStrings": [
                "version: (?<currentValue>.*?)\n"
            ],
            "depNameTemplate": "golangci/golangci-lint",
            "datasourceTemplate": "github-tags"
        },
        {
            "fileMatch": [
                "^.github/workflows/check.yml$"
            ],
            "matchStrings": [
                "go-version: '(?<currentValue>.*?)'\n"
            ],
            "depNameTemplate": "golang/go",
            "datasourceTemplate": "github-tags"
        },
        {
            "fileMatch": [
                "^.github/workflows/check.yml$"
            ],
            "matchStrings": [
                "tilt: '(?<currentValue>.*?)'\n"
            ],
            "depNameTemplate": "tilt-dev/tilt",
            "datasourceTemplate": "github-tags"
        },
        {
            "fileMatch": [
                "(^|/|\\.)Makefile$"
            ],
            "matchStrings": [
                "# renovate: datasource=(?<datasource>[a-z-]+?) depName=(?<depName>[^\\s]+?)(?: (lookupName|packageName)=(?<packageName>[^\\s]+?))?(?: versioning=(?<versioning>[^\\s]+?))?(?: registryUrl=(?<registryUrl>[^\\s]+?))?\\s.+?_VERSION[ :=]+\"?(?<currentValue>.+?)\"?\\s"
            ]
        }
    ],
    "packageRules": [
        {
            "matchPackagePatterns": [
                "^k8s.io/client-go$"
            ],
            "matchUpdateTypes": [
                "major"
            ],
            "enabled": false
        },
        {
            "matchPackageNames": [
                "golang/go"
            ],
            "extractVersion": "^go(?<version>.*)$"
        }
    ]
}